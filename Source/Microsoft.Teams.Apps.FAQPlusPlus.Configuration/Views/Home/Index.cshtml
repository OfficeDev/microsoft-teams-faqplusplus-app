@{

    ViewBag.Title = "Configuration App";
}

<div class="row contentMargin">
    <div class="col-lg-12">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Home/_Team.cshtml")
        </div>
    </div>
    <div class="col-lg-12 marginBetweenView">
        <hr />
    </div>
    <div class="col-lg-12">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Home/_KnowledgeBase.cshtml")
        </div>
    </div>
    <div class="col-lg-12 marginBetweenView">
        <hr />
    </div>
    <div class="col-lg-12">
        <div class="col-lg-8">
            @Html.Partial("~/Views/Home/_UpnList.cshtml")
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        //Display team Id if its saved if yes then perform edit UI changes
         $.ajax({
                type: "GET",
                url: '@Url.Action("GetSavedTeamIdAsync")',
             success: function (result) {
                 if (result != "") {                //Display the default UI when no team Id results are available for display
                     $(".teamIdTextBox").val(result);
                     toggleToEdit("team");
                 }
                },
                error: function () {
                    alert("Unable to display team Id");
                }
            });
    });

    // Display a green tick when team Id save is success
    function onTeamSaveSuccess() {
        clearStatusIconAndMessage("team");
        saveSuccessIcon("teamStorageStatusIcon");
        toggleToEdit("team");
    }

    // Display a red cross with error text message when team is not saved due to error
    function onTeamSaveFailure(errorText) {
        clearStatusIconAndMessage("team");
        saveFailureIconAndText("teamStorageStatusIcon", "teamStorageStatusMessage", errorText.statusText);
    }

    // Perform changes when Edit related UI has to be displayed
    function toggleToEdit(section) {
        switch (section) {
            case "team":
                $("#teamSubmitButton").val("Edit");
                $(".teamIdTextBox").attr("disabled", "disabled");
                break;
        }
    }

    // Provide the div whose icon and color needs to be changed on successful save
    function saveSuccessIcon(statusIconId) {
        $("#" + statusIconId + "").addClass("glyphicon glyphicon-ok").addClass("storageStatusIcon-success");
    }

    // Provide the div whose icon, color and text needs to be changed due to failure while save
    function saveFailureIconAndText(statusIconId, statusMessageId, errorText) {
        $("#" + statusIconId + "").addClass("glyphicon glyphicon-remove").addClass("storageStatusIcon-failure");
        $("#" + statusMessageId + "").addClass("error-message alert alert-danger").text(errorText);
    }

    // Clear icon and message
    function clearStatusIconAndMessage(section) {
        switch (section) {
            case "team":
                $("#teamStorageStatusIcon").removeAttr("class");
                $("#teamStorageStatusMessage").removeAttr("class");
                break;
        }
    }

    // Check if the button text is Edit or Ok then proceed to either form submit or disable textbox of respective section
    // such as teams or knowledgebase
    $(".toggleToEditButton").click(function () {
        var currentElement = $(this);
        var currentForm = currentElement.closest(".formToSubmit");
        if (currentElement.val() === "Edit") {
            currentForm.find(".toggleTextBox").removeAttr("disabled");
            currentElement.val("OK");
        }
        else {
            currentForm.submit();
        }
    });
</script>